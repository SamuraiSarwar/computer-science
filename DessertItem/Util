import java.text.DecimalFormat;
import java.util.Scanner;

class Utl{
    
    public static void sopl(String userOutput){
        System.out.println(userOutput);              
    }//sopl
    
    public static void sopl(Object userOutput){
        System.out.println(userOutput);              
    }//sopl
    
    public static void sopl(double userOutput){
        System.out.println(userOutput);              
    }//sopl
    
    public static void sopl(int userOutput){
        System.out.println(userOutput);              
    }//sopl
    
    public static void sopl(char userOutput){
        System.out.println(userOutput);              
    }//sopl
    
    public static void sopl(boolean userOutput){
        System.out.println(userOutput);              
    }//sopl
    
    public static void sop(String userOutputNoReturn)
        {
        System.out.print(userOutputNoReturn);
        }//sop
    
    public static void sop(int userOutputNoReturn)
        {
        System.out.print(userOutputNoReturn);
        }//sop
    
    public static void sop(char userOutputNoReturn)
        {
        System.out.print(userOutputNoReturn);
        }//sop
    
    public static void sop(double userOutputNoReturn)
        {
        System.out.print(userOutputNoReturn);
        }//sop
    
    public static void sop(boolean userOutputNoReturn)
        {
        System.out.print(userOutputNoReturn);
        }//sop
    
    public static void autoBlank(int numberOfReturns){
        for (int x = numberOfReturns; x > 0; x--)
        {
        System.out.println(""); 
        }
    }//autoBlank
    
    public static String autoBlankStr(int numberOfReturns){
    String blankLineStr = "";
        for (int x = numberOfReturns; x > 0; x--)
        {
        blankLineStr += "\n"; 
        }
    return blankLineStr;
    }//autoBlankStr
    
    public static String autoRepeatStr(String stringToRepeat, int numberOfReturns){
    
        for (int x = numberOfReturns; x > 0; x--)
        {
        stringToRepeat += stringToRepeat; 
        }
    return stringToRepeat;
    }//autoRepeatStr
    
    public static String autoSpaceStr(int numberOfReturns){
        String spaceReturn = "";
        for (int x = numberOfReturns; x > 0; x--)
        {
        spaceReturn += " "; 
        }
        
        return spaceReturn;
    }//autoSpaceStr
    
    public static void autoTab(int numberOfReturns){
        for (int x = numberOfReturns; x > 0; x--)
        {
        System.out.print("    "); 
        }
    }//autoTab
    
    public static String concatString(String one, String two){
        return one += two;
    }//concatString
    
    public static String getString(String userPrompt){
        Scanner kb = new Scanner(System.in);
        sop(userPrompt + " ===> ");
        return kb.nextLine();      
    }//getString
    public static int getInt(String userPrompt){
        Scanner kb = new Scanner(System.in);
        sop(userPrompt + " ===> ");
        return kb.nextInt();      
    }//getInt
    public static char getChar(String userPrompt){
        Scanner kb = new Scanner(System.in);
        sop(userPrompt + " ===> ");
        return kb.next().charAt(0);      
    }//getChar
    public static double getDouble(String userPrompt){
        Scanner kb = new Scanner(System.in);
        sop(userPrompt + " ===> ");
        return kb.nextDouble();      
    }//getDouble
    public static int getRandomInt(int smallerRange, int greaterRange){
        int randomNum = (int) ((Math.random() * (greaterRange - smallerRange)) + smallerRange);
        return randomNum;      
    }//getRandomInt
    public static void insertPause(){
        Scanner kb = new Scanner(System.in);
        autoBlank(1);
        sopl("Press Any Key to Continue...");
        kb.nextLine();        
    }//insertPause
    
    public static void projectHeader(String date){
        sopl("Project Made by: Glen Lauritsen Period 3 " + date);
    }//header
    
    public static String decimalFormatTwoPlaces(double toFormat){
    DecimalFormat output = new DecimalFormat("#.00");
    return output.format(toFormat);
    
    
    
    }
}//Util
