//Purpose: How to use an algorythm: Selection, inssertion, linearassaign,
//display, delete, insertInOrder, display single element read & write files
import java.io.*;
import java.util.Scanner;

public class ListClass {
    private String [] list;
    private int size;//the # of actual ele in the array
    private final int MAX = 30;//logical size, default size of array
    //default constructor
    
    public ListClass()
    {
        list = new String[MAX];
        size = 0;
    }//ListClass
    //user define - allows user to set logical size
    public ListClass(int sz)
    {
        list = new String[sz];
        size = 0;
    }//ListClass user defined
    public void assign(String str)
    {
        if(size < list.length)
        {
            list[size] = str;
            size++;
        }//if(size < list.length)
        else
            Util.sopl("Capacity has been reached.");
    }//assign
    public void display()
    {
        for(int x = 0;x<size;x++)
        {
            Util.sopl(list[x]);
        }
    }//display
    public void writeFile()throws IOException
    {
        PrintWriter fileout = new PrintWriter(new FileWriter("pigs.txt"));
        for(int x = 0;x<size;x++)
        fileout.println(list[x]);
        fileout.close();
        Util.sopl("File has been saved");
    }//writeFile
    
    public void readFile()throws IOException
    {
        Scanner file = new Scanner(new File("pigs.txt"));
        list = new String[MAX];
        while(size<MAX && file.hasNext())
        {
            String str = file.nextLine();
            list[size]=str;
            size++;
        }//while(size<MAX)
        file.close();
        Util.sopl(size +" lines has been read into an array");
    }//readFile
    public int linearSearch(String str)
    {
        int index = 0;
        while(index < size)
        {
            if(str.equals(list[index]))
                return index; 
            index++; 
        }//(index < size)
        return -1; 
    }//linearSearch
    public void displayIndividual(int index)
    {
        Util.sopl("Model Name: "+ list[index]); 
    }//displayIndividual
    public int binarySearch(String str)
    {
        int indexLow = 0;
        
}//ListClass
